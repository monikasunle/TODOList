{"version":3,"sources":["todolist/Input.js","todolist/List.js","todolist/TodoList.js","index.js"],"names":["Input","props","htmlFor","value","type","onChange","onClick","addTodo","List","arr1","todos","filter","item","done","arr2","length","renderTodos","TodoList","handleChange","e","setState","inpValue","target","state","title","delTodo","idx","index","toggle","newTodos","JSON","parse","stringify","map","todo","checked","dangerouslySetInnerHTML","__html","localStorage","setItem","this","getItem","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAgBeA,EAdH,SAACC,GACT,OACI,6BACI,2BAAOC,QAAQ,OAAf,YACA,2BACAC,MAAOF,EAAME,MACbC,KAAK,OACLC,SAAUJ,EAAMI,WAEhB,4BAAQC,QAASL,EAAMM,SAAvB,kBCYGC,EArBF,SAACP,GACV,IAAIQ,EAAOR,EAAMS,MAAMC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,QACxCC,EAAOb,EAAMS,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAC3C,OACI,6BACQ,0DAAYJ,EAAKM,QACjB,4BAEQd,EAAMe,aAAY,IAG1B,0DAAYF,EAAKC,QACjB,4BAEQd,EAAMe,aAAY,MC4E3BC,E,kDAvFX,aAAc,IAAD,8BACT,gBAWJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOnB,SAbxB,EAsBbI,QAAU,WACoB,IAAvB,EAAKgB,MAAMF,WAGd,EAAKD,SAAS,CACVV,MAAM,CACF,CACIc,MAAM,EAAKD,MAAMF,SACjBR,MAAK,IAHR,mBAKE,EAAKU,MAAMb,UAItB,EAAKa,MAAMF,SAAW,KApCb,EAsCbI,QAAU,SAACC,GAEP,EAAKN,SAAS,CACVV,MAAM,EAAKa,MAAMb,MAAMC,QAAO,SAACC,EAAKe,GAAN,OAAcA,GAAOD,QAzC9C,EAsDbE,OAAS,SAACD,GACN,IAAIE,EAAWC,KAAKC,MAAMD,KAAKE,UAAU,EAAKT,MAAMb,QACpDmB,EAASF,GAAOd,MAAQgB,EAASF,GAAOd,KACxC,EAAKO,SAAS,CACVV,MAAMmB,KA1DD,EA6Dbb,YAAc,SAACH,GACX,OAAO,EAAKU,MAAMb,MAAMuB,KAAI,SAACC,EAAKR,GAC9B,GAAGb,GAAQqB,EAAKrB,KACZ,OAAO,4BACH,2BACIT,KAAK,WACLE,QAAS,kBAAI,EAAKsB,OAAOF,IACzBS,QAAStB,IAEb,0BAAMuB,wBAA2B,CAACC,OAAOH,EAAKV,SAC9C,4BAAQlB,QAAS,kBAAI,EAAKmB,QAAQC,KAAlC,qBArEZ,EAAKH,MAAQ,CACTF,SAAS,GACTX,MAAM,CACF,CAACc,MAAM,IAAIX,MAAK,GAChB,CAACW,MAAM,IAAIX,MAAK,GAChB,CAACW,MAAM,IAAIX,MAAK,GAChB,CAACW,MAAM,IAAIX,MAAK,KARf,E,iEAoBT,OAJAyB,aAAaC,QACT,QACAT,KAAKE,UAAUQ,KAAKjB,MAAMb,SAEvB,I,0CA2BP,IAAIA,EAAQ4B,aAAaG,QAAQ,SAC9B/B,GACC8B,KAAKpB,SAAS,CACVV,MAAMoB,KAAKC,MAAMrB,O,+BA0BnB,IAAD,EACoB8B,KAAKjB,MAAvBF,EADF,EACEA,SAASX,EADX,EACWA,MAChB,OACI,6BACI,kBAAC,EAAD,CAAOP,MAAOkB,EAAUjB,KAAK,OAAOC,SAAUmC,KAAKtB,aAAcX,QAASiC,KAAKjC,UAC/E,kBAAC,EAAD,CAAMG,MAAOA,EAAOM,YAAawB,KAAKxB,mB,GAlF/B0B,aCAvBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4f3eb05c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nlet Input = (props)=>{\r\n    return (\r\n        <div>\r\n            <label htmlFor='inp'>todoList</label>\r\n            <input \r\n            value={props.value}\r\n            type='text'\r\n            onChange={props.onChange}\r\n            />\r\n            <button onClick={props.addTodo}>添加</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React, { Component } from 'react'\r\n\r\nconst List = (props)=>{\r\n    let arr1 = props.todos.filter(item => !item.done);\r\n    let arr2 = props.todos.filter(item => item.done);\r\n    return (\r\n        <div>\r\n                <h2>正在进行   {arr1.length}</h2>\r\n                <ul>\r\n                    {\r\n                        props.renderTodos(false)\r\n                    }\r\n                </ul>\r\n                <h2>已经完成   {arr2.length}</h2>\r\n                <ul>\r\n                    {\r\n                        props.renderTodos(true)\r\n                    }\r\n                </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React, { Component } from 'react'\r\nimport Input from './Input'\r\nimport List from './List'\r\n\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false}\r\n            ]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n        return true;\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue == ''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        // this.setState({inpValue:''});\r\n        this.state.inpValue = '';\r\n    }\r\n    delTodo = (idx)=>{\r\n\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!=idx)\r\n            });\r\n\r\n    }\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done == todo.done){\r\n                return <li>\r\n                    <input \r\n                        type=\"checkbox\"\r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done}\r\n                    />\r\n                    <span dangerouslySetInnerHTML = {{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.delTodo(idx)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const {inpValue,todos} = this.state;\r\n        return (\r\n            <div>\r\n                <Input value={inpValue} type='text' onChange={this.handleChange} addTodo={this.addTodo}/>\r\n                <List todos={todos} renderTodos={this.renderTodos}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './todolist/TodoList';\n\nReactDOM.render(\n  <TodoList/>,\n  document.getElementById('root')\n)\n\n\n// const Buttons = ()=>{\n//   const handleClick = (num)=>{\n//     console.log(num);\n//   }\n//   return <div>\n//     {\n//       btns.map(\n//         (item)=>\n//         <button \n//           key={item} \n//         >\n//           {item}\n//         </button>)\n//     }\n//   </div>\n// }\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   'hello react'\n//   )\n\n//组件声明\n//函数组件\n//UI（展示）组件、木偶组件\n// function App(props){\n//   const{title,id} = props;\n//   return <div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// //智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.atate={\n//       name:'tom'\n//     }\n//     setTimeout(()=>{\n//       this.setState({name:'jerry'})\n//     },3000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n//   ReactDOM.render(\n//     // ele, \n//     // <App title='任意值' id='app'/>,\n//     <Demo/>,\n//     document.getElementById('root')\n//     ); \n\n\n//将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     //解构\n//     const{type,props} = eleObj;\n//     //创建第一层节点\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       // if(prop == 'className'){\n//       //   ele.setAttribute('class',props[prop]);\n//       // }\n\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;  //continue\n//         }\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach(child=>{\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     //将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n"],"sourceRoot":""}